version: 2.1

orbs:
  docker-publish: circleci/docker-publish@0.1.4
  heroku: circleci/heroku@0.0.4

workflows:
  build_test_release:
    jobs:
      - docker-publish/publish
      - test:
          requires:
            - docker-publish/publish
      - publish:
          requires:
            - test
          filters:
            branches:
              only:
                - master
      - release:
          requires:
            - publish

jobs:
  test:
    executor: app_executor
    working_directory: /opt/app
    steps:
      - run:
          name: Installing test dependencies
          command: npm install --only=dev
      - run:
          name: Linting
          command: npm run lint-ci
      - run:
          name: Testing
          command: npm run test-ci
      - store_test_results:
          path: reports/junit
  publish:
    executor: docker-publish/docker
    environment:
      HEROKU_APP: jwt-api-service
    steps:
      - setup_remote_docker
      - docker-publish/check
      - docker-login:
          registry: registry.heroku.com
          user: _
          password: $HEROKU_API_KEY
      - docker-pull
      - run:
          name: Tag Docker image
          command: |
            docker tag $DOCKER_LOGIN/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1 \
                       $DOCKER_LOGIN/$CIRCLE_PROJECT_REPONAME:latest
            docker tag $DOCKER_LOGIN/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1 \
                       registry.heroku.com/$HEROKU_APP/web
      - docker-push:
          tag: latest
      - docker-push:
          registry: registry.heroku.com
          image: $HEROKU_APP/web
          tag: latest
  release:
    executor: heroku/default
    environment:
      HEROKU_APP: jwt-api-service
    steps:
      - heroku/install
      - heroku-release:
          app_name: $HEROKU_APP


commands:
  docker-pull:
    description: Pulls a Docker image
    parameters:
      registry:
        type: string
        default: docker.io
      image:
        type: string
        default: $DOCKER_LOGIN/$CIRCLE_PROJECT_REPONAME
      tag:
        type: string
        default: $CIRCLE_SHA1
    steps:
      - run:
          name: Pull Docker Image
          command: docker pull << parameters.registry >>/<< parameters.image >>:<< parameters.tag >>
  docker-push:
    description: Pushes a Docker image
    parameters:
      registry:
        type: string
        default: docker.io
      image:
        type: string
        default: $DOCKER_LOGIN/$CIRCLE_PROJECT_REPONAME
      tag:
        type: string
        default: $CIRCLE_SHA1
    steps:
      - run:
          name: Push Docker image
          command: |
            if [[ $CIRCLE_NODE_INDEX == 0 ]]; then
              docker push << parameters.registry >>/<< parameters.image >>:<< parameters.tag >>
            fi
  docker-login:
    description: Docker login
    parameters:
      registry:
        type: string
        default: docker.io
      user:
        type: string
      password:
        type: string
    steps:
      - run:
          name: Docker login
          command: |
            echo << parameters.password >> | \
            docker login --password-stdin -u << parameters.user >> << parameters.registry >>
  heroku-release:
    description: Heroku release
    parameters:
      app_name:
        type: string
    steps:
      - run:
          name: Heroku release
          command: heroku container:release web --app=<< parameters.app_name >>

executors:
  app_executor:
    parameters:
      image:
        type: string
        default: $DOCKER_LOGIN/$CIRCLE_PROJECT_REPONAME
      tag:
        type: string
        default: $CIRCLE_SHA1
    docker:
      - image: << parameters.image >>:<< parameters.tag >>
